package com.toeflassistant.common;

import java.util.ArrayList;
import java.util.List;

import com.haarman.supertooltips.ToolTip;
import com.haarman.supertooltips.ToolTipRelativeLayout;
import com.haarman.supertooltips.ToolTipView;
import com.toeflassistant.database.mDatabase;
import com.toeflassistant.tag.TagTopicListActivity;
import com.toeflassistant.writting.R;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;

public class TopicDetailActivity extends Activity implements View.OnClickListener, ToolTipView.OnToolTipViewClickedListener{
	String questionId;
	String topicContent;
	String questionContent;
	List<String> tagNameList = new ArrayList<String>();
	int tagLayoutWide;
    String sampleTotal;
    private ToolTipRelativeLayout mToolTipFrameLayout1;
    private ToolTipRelativeLayout mToolTipFrameLayout2;

    private ToolTipView mGreenToolTipView;
    private ToolTipView mRedToolTipView;
    private ToolTipView mOrangeToolTipView;

	
	public void onCreate(Bundle savedInstanceState){
		super.onCreate(savedInstanceState);
		setContentView(R.layout.topic_listview_item_detail_activity);
		//获得传入的questionId
		Bundle extras = getIntent().getExtras();
		questionId = extras.getString("question_id");
		sampleTotal = extras.getString("sampleTotal");
		mDatabase mdb = new mDatabase();
		mdb.openDatabase();
		topicContent = mdb.getOneTopic(questionId);
		questionContent = mdb.getOneQuestion(questionId);
		mdb.closeDatabase();
		//获得topic和question的内容
		TextView topic = (TextView)this.findViewById(R.id.item_detail_topic_description);
		TextView question = (TextView)this.findViewById(R.id.item_detail_sample_question_description);
		TextView tip = (TextView)this.findViewById(R.id.item_detail_tip);
		TextView sample = (TextView)this.findViewById(R.id.item_detail_sample_total);

		//设置topic和question的内容
        topic.setText(topicContent.trim());
        question.setText(questionContent.trim());
        sample.setText(sampleTotal);
        
        //添加tag
        final TextView tag1 = (TextView)this.findViewById(R.id.tag1);
        final TextView tag2 = (TextView)this.findViewById(R.id.tag2);
        final TextView tag3 = (TextView)this.findViewById(R.id.tag3);
        final TextView tag4 = (TextView)this.findViewById(R.id.tag4);
        final TextView tag5 = (TextView)this.findViewById(R.id.tag5);
        final TextView tag6 = (TextView)this.findViewById(R.id.tag6);
        final TextView tag7 = (TextView)this.findViewById(R.id.tag7);
        final TextView tag8 = (TextView)this.findViewById(R.id.tag8);
        final TextView tag9 = (TextView)this.findViewById(R.id.tag9);

        //将tag设定为不可见
		tag1.setVisibility(TextView.INVISIBLE);
		tag2.setVisibility(TextView.INVISIBLE);
		tag3.setVisibility(TextView.INVISIBLE);
		tag4.setVisibility(TextView.INVISIBLE);
		tag5.setVisibility(TextView.INVISIBLE);
		tag6.setVisibility(TextView.INVISIBLE);
		tag7.setVisibility(TextView.INVISIBLE);
		tag8.setVisibility(TextView.INVISIBLE);
		tag9.setVisibility(TextView.INVISIBLE);
		//获得预先设定好的RelativeLayout，以备下面用于删除用不到的tag
		RelativeLayout rl = (RelativeLayout)this.findViewById(R.id.item_detail_tag_area);
		//获得layout宽度
		tagLayoutWide = rl.getLayoutParams().width;

		//打开数据库，根据id获得tag
		mdb.openDatabase();
		tagNameList = mdb.getTag(Integer.valueOf(questionId));
		//只有一个tag的情况
		if(tagNameList.size()==1){
			//设置获得的tag信息 并将tag设定为可见
			tag1.setText(tagNameList.get(0));
			tag1.setVisibility(TextView.VISIBLE);	
			//删除用不到的tag
			rl.removeView(tag2);
			rl.removeView(tag3);
			rl.removeView(tag4);
			rl.removeView(tag5);
			rl.removeView(tag6);
			rl.removeView(tag7);
			rl.removeView(tag8);
			rl.removeView(tag9);
			
			tag1.setOnClickListener(new OnClickListenerTag1());

		}
		//2个tag的情况
		if(tagNameList.size()==2){
		    tag1.setText(tagNameList.get(0));	
		    tag1.setVisibility(TextView.VISIBLE);

		    tag2.setText(tagNameList.get(1));
		    tag2.setVisibility(TextView.VISIBLE);
		    
			rl.removeView(tag3);
			rl.removeView(tag4);
			rl.removeView(tag5);
			rl.removeView(tag6);
			rl.removeView(tag7);
			rl.removeView(tag8);
			rl.removeView(tag9);
			
			tag1.setOnClickListener(new OnClickListenerTag1());
			tag2.setOnClickListener(new OnClickListenerTag2());

	    }
	   //3个tag的情况
	   if(tagNameList.size()==3){
		
			tag1.setText(tagNameList.get(0));	
		    tag1.setVisibility(TextView.VISIBLE);

		    tag2.setText(tagNameList.get(1));
		    tag2.setVisibility(TextView.VISIBLE);
		
	    	tag3.setText(tagNameList.get(2));
	    	tag3.setVisibility(TextView.VISIBLE);
     	
            	rl.removeView(tag4);
            	rl.removeView(tag5);
    			rl.removeView(tag6);
    			rl.removeView(tag7);
    			rl.removeView(tag8);
    			rl.removeView(tag9);
    			
    			tag1.setOnClickListener(new OnClickListenerTag1());
    			tag2.setOnClickListener(new OnClickListenerTag2());
    			tag4.setOnClickListener(new OnClickListenerTag4());

	    }
	   //4个tag的情况
	   if(tagNameList.size()==4){
		
			
	   	    tag1.setText(tagNameList.get(0));	
		    tag1.setVisibility(TextView.VISIBLE);
 
		    tag2.setText(tagNameList.get(1));
		    tag2.setVisibility(TextView.VISIBLE);
		
	    	tag3.setText(tagNameList.get(2));
		    tag3.setVisibility(TextView.VISIBLE);
		
		    tag4.setText(tagNameList.get(3));
		    tag4.setVisibility(TextView.VISIBLE);

				rl.removeView(tag5);
				rl.removeView(tag6);
				rl.removeView(tag7);
				rl.removeView(tag8);
				rl.removeView(tag9);
				
				tag1.setOnClickListener(new OnClickListenerTag1());
				tag2.setOnClickListener(new OnClickListenerTag2());
				tag3.setOnClickListener(new OnClickListenerTag3());
				tag4.setOnClickListener(new OnClickListenerTag4());
			
        }
	    //5个tag的情况
   	    if(tagNameList.size()==5){
		
			
		    tag1.setText(tagNameList.get(0));	
	    	tag1.setVisibility(TextView.VISIBLE);

	
	        tag2.setText(tagNameList.get(1));
	    	tag2.setVisibility(TextView.VISIBLE);
		
	    	tag3.setText(tagNameList.get(2));
	    	tag3.setVisibility(TextView.VISIBLE);
		
	    	tag4.setText(tagNameList.get(3));
	    	tag4.setVisibility(TextView.VISIBLE);
		
	    	tag5.setText(tagNameList.get(4));
	    	tag5.setVisibility(TextView.VISIBLE);
	    	
				rl.removeView(tag6);
				rl.removeView(tag7);
				rl.removeView(tag8);
				rl.removeView(tag9);

				tag1.setOnClickListener(new OnClickListenerTag1());
				tag2.setOnClickListener(new OnClickListenerTag2());
				tag3.setOnClickListener(new OnClickListenerTag3());
				tag4.setOnClickListener(new OnClickListenerTag4());
				tag5.setOnClickListener(new OnClickListenerTag5());
	
	   }
	    //6个tag的情况，目测最多6个
   	    if(tagNameList.size()==6){
	
			
	        tag1.setText(tagNameList.get(0));	
	    	tag1.setVisibility(TextView.VISIBLE);

	        tag2.setText(tagNameList.get(1));
		    tag2.setVisibility(TextView.VISIBLE);
		
		    tag3.setText(tagNameList.get(2));
		    tag3.setVisibility(TextView.VISIBLE);
		
	    	tag4.setText(tagNameList.get(3));
		    tag4.setVisibility(TextView.VISIBLE);
		    
		    tag5.setText(tagNameList.get(4));
	    	tag5.setVisibility(TextView.VISIBLE);
		
		    tag6.setText(tagNameList.get(5));
	    	tag6.setVisibility(TextView.VISIBLE);	
	    	
					rl.removeView(tag7);
					rl.removeView(tag8);
					rl.removeView(tag9);
					tag1.setOnClickListener(new OnClickListenerTag1());
					tag2.setOnClickListener(new OnClickListenerTag2());
					tag3.setOnClickListener(new OnClickListenerTag3());
					tag4.setOnClickListener(new OnClickListenerTag4());
					tag5.setOnClickListener(new OnClickListenerTag5());
					tag6.setOnClickListener(new OnClickListenerTag6());


	 }
   	    
   	    //设置帮助按钮
        mToolTipFrameLayout1 = (ToolTipRelativeLayout) findViewById(R.id.topic_tooltipframelayout);
        ImageButton button1 = (ImageButton)findViewById(R.id.item_detail_button1);    
        ImageButton button2 = (ImageButton)findViewById(R.id.item_detail_button2);
        mToolTipFrameLayout2 = (ToolTipRelativeLayout) findViewById(R.id.tag_tooltipframelayout);
        findViewById(R.id.item_detail_button3).setOnClickListener(TopicDetailActivity.this);
        new Handler().postDelayed(new Runnable() {
            @Override
            public void run() {
                addGreenToolTipView();
            }
        }, 700);
        
        new Handler().postDelayed(new Runnable() {
            @Override
            public void run() {
                addRedToolTipView();
            }
        }, 500);
        
        new Handler().postDelayed(new Runnable() {
            @Override
            public void run() {
                addOrangeToolTipView();
            }
        }, 900);
        
   	    sample.setOnClickListener( new OnClickListenerImplSample());  	 
   	    tip.setOnClickListener(new OnClickListenerImplTip());
	}
	
	private void addGreenToolTipView() {
		mGreenToolTipView = mToolTipFrameLayout1.showToolTipForView(
                new ToolTip()
                        .withText("Another beautiful Button!")
                        .withColor(getResources().getColor(R.color.green_4)),
                findViewById(R.id.item_detail_button1));
        mGreenToolTipView.setOnToolTipViewClickedListener(TopicDetailActivity.this); 			
	}
	
    private void addRedToolTipView() {
        mRedToolTipView = mToolTipFrameLayout1.showToolTipForView(
                new ToolTip()
                        .withText("A beautiful Button")
                        .withColor(getResources().getColor(R.color.red_4))
                        .withShadow(true),
                findViewById(R.id.item_detail_button2));
        mRedToolTipView.setOnToolTipViewClickedListener(TopicDetailActivity.this);
    }
	
    private void addOrangeToolTipView() {
        mOrangeToolTipView = mToolTipFrameLayout2.showToolTipForView(
                new ToolTip()
                        .withText("Tap me!")
                        .withColor(getResources().getColor(R.color.yellow_4)),
                findViewById(R.id.item_detail_button3));
        mOrangeToolTipView.setOnToolTipViewClickedListener(TopicDetailActivity.this);
    }
    




	private class OnClickListenerImplSample implements OnClickListener{

		@Override
		public void onClick(View v) {
			Intent intent = new Intent(TopicDetailActivity.this,TopicSampleListActivity.class);
			intent.putExtra("question_id", questionId);
	    	startActivity(intent);			
		}
	}
	
	private class OnClickListenerImplTip implements OnClickListener{

		@Override
		public void onClick(View v) {
			Intent intent = new Intent(TopicDetailActivity.this,TopicTipActitivty.class);
			intent.putExtra("question_id", questionId);
	    	startActivity(intent);			
		}
	}
	
	
	private class OnClickListenerTag1 implements OnClickListener{

		@Override
		public void onClick(View v) {
			final TextView tagIdText = (TextView)v.findViewById(R.id.tag1);
			String tagName = tagIdText.getText().toString();
			String newTagName = "\""+ tagName + "\"";
			Intent intent = new Intent(TopicDetailActivity.this,TagTopicListActivity.class);
			intent.putExtra("tag_name", newTagName);
	    	startActivity(intent);			
			
		}
		
	}
	
	private class OnClickListenerTag2 implements OnClickListener{

		@Override
		public void onClick(View v) {
			final TextView tagIdText = (TextView)v.findViewById(R.id.tag2);
			String tagName = tagIdText.getText().toString();
			String newTagName = "\""+ tagName + "\"";
			Intent intent = new Intent(TopicDetailActivity.this,TagTopicListActivity.class);
			intent.putExtra("tag_name", newTagName);
	    	startActivity(intent);	
			
		}
		
	}
	
	private class OnClickListenerTag3 implements OnClickListener{

		@Override
		public void onClick(View v) {
			final TextView tagIdText = (TextView)v.findViewById(R.id.tag3);
			String tagName = tagIdText.getText().toString();
			String newTagName = "\""+ tagName + "\"";
			Intent intent = new Intent(TopicDetailActivity.this,TagTopicListActivity.class);
			intent.putExtra("tag_name", newTagName);
	    	startActivity(intent);	
			
		}
		
	}
	
	private class OnClickListenerTag4 implements OnClickListener{

		@Override
		public void onClick(View v) {
			final TextView tagIdText = (TextView)v.findViewById(R.id.tag4);
			String tagName = tagIdText.getText().toString();
			String newTagName = "\""+ tagName + "\"";
			Intent intent = new Intent(TopicDetailActivity.this,TagTopicListActivity.class);
			intent.putExtra("tag_name", newTagName);
	    	startActivity(intent);	
		}
		
	}
	
	private class OnClickListenerTag5 implements OnClickListener{

		@Override
		public void onClick(View v) {
			final TextView tagIdText = (TextView)v.findViewById(R.id.tag5);
			String tagName = tagIdText.getText().toString();
			String newTagName = "\""+ tagName + "\"";
			Intent intent = new Intent(TopicDetailActivity.this,TagTopicListActivity.class);
			intent.putExtra("tag_name", newTagName);
	    	startActivity(intent);	
		}
		
	}
	
	private class OnClickListenerTag6 implements OnClickListener{

		@Override
		public void onClick(View v) {
			final TextView tagIdText = (TextView)v.findViewById(R.id.tag6);
			String tagName = tagIdText.getText().toString();
			String newTagName = "\""+ tagName + "\"";
			Intent intent = new Intent(TopicDetailActivity.this,TagTopicListActivity.class);
			intent.putExtra("tag_name", newTagName);
	    	startActivity(intent);	
			
		}
		
	}


	@Override
	public void onClick(View v) {
		 switch (v.getId()) {
		 case R.id.item_detail_button1:
             if (mGreenToolTipView == null) {
                 addGreenToolTipView();
             } else {
                 mGreenToolTipView.remove();
                 mGreenToolTipView = null;
             }
             break;
         case R.id.item_detail_button2:
             if (mRedToolTipView == null) {
                 addRedToolTipView();
             } else {
                 mRedToolTipView.remove();
                 mRedToolTipView = null;
             }
             break;
         case R.id.item_detail_button3:
             if (mOrangeToolTipView == null) {
                 addOrangeToolTipView();
             } else {
                 mOrangeToolTipView.remove();
                 mOrangeToolTipView = null;
             }
             break;
     }		
	}

	@Override
	public void onToolTipViewClicked(ToolTipView toolTipView) {
		   if (mGreenToolTipView == toolTipView) {
			   mGreenToolTipView = null;
	        } else if (mRedToolTipView == toolTipView) {
	        	mRedToolTipView = null;
	        } else if (mOrangeToolTipView == toolTipView) {
	            mOrangeToolTipView = null;
	        }		
	}
	
		
	
}

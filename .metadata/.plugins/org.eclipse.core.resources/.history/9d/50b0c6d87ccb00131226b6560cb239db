package com.example.testfunction;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import android.app.ActionBar;
import android.app.Activity;
import android.app.FragmentTransaction;
import android.app.ActionBar.Tab;
import android.os.Bundle;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.MenuItem.OnActionExpandListener;
import android.widget.ListView;
import android.widget.SearchView;
import android.widget.SearchView.OnQueryTextListener;
import android.widget.TextView;
import android.widget.Toast;

public class SearchActivity extends Activity {
	ActionBar mActionBar;
	ViewPager mViewPager;
	MyPagerAdapter mTabPagerAdapter;
	List<View> mTabPagerList = new ArrayList<View>();

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.search_main);
		InitActionBar();
		InitViewPager();
	}
	
	
	private void InitViewPager() {
		mViewPager = (ViewPager) findViewById(R.id.viewpager);
		LayoutInflater mInflater = getLayoutInflater();
		View tab1View = mInflater.inflate(R.layout.tab1, null);
		View tab2View = mInflater.inflate(R.layout.tab2, null);
		View tab3View = mInflater.inflate(R.layout.tab3, null);
//		ListView tab1List = (ListView)tab1View.findViewById(R.id.tab1_list);
//		ListView tab2List = (ListView)tab1View.findViewById(R.id.tab2_list);
//		ListView tab3List = (ListView)tab1View.findViewById(R.id.tab3_list);
	    TextView txt1 = (TextView)tab1View.findViewById(R.id.tab1_txt);
	    TextView txt2 = (TextView)tab2View.findViewById(R.id.tab2_txt);
	    TextView txt3 = (TextView)tab3View.findViewById(R.id.tab3_txt);
		 txt1.setText("tab1");
	     txt2.setText("tab2");
	     txt3.setText("tab3");
	     //给控件设置tag，来更新viewpager里面的数据，暂时只有这种方法
         txt1.setTag("tvRecord1");
         txt2.setTag("tvRecord2");
         txt3.setTag("tvRecord3");

		mTabPagerList.add(tab1View);
		mTabPagerList.add(tab2View);
		mTabPagerList.add(tab3View);

		mViewPager.setAdapter(new MyPagerAdapter(mTabPagerList));
		mViewPager.setCurrentItem(0);
		mViewPager.setOnPageChangeListener(new MyOnPageChangeListener());
	}


	private void InitActionBar() {
		MyTabListener mtabListener = new MyTabListener();

		mActionBar = getActionBar();
		mActionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);
		mActionBar.addTab(mActionBar.newTab().setText("Tab 1")
				.setTabListener(mtabListener));
		mActionBar.addTab(mActionBar.newTab().setText("Tab 2")
				.setTabListener(mtabListener));
		mActionBar.addTab(mActionBar.newTab().setText("Tab 3")
				.setTabListener(mtabListener));		
	}
	
	
	private class MyPagerAdapter extends PagerAdapter{
		public List<View> mListViews;

		public MyPagerAdapter(List<View> tlist) {
			this.mListViews = tlist;
		}

		@Override
		public int getCount() {
			return mListViews.size();
		}

		@Override
		public boolean isViewFromObject(View view, Object object) {
			return view == (object);
		}

		@Override
		public void destroyItem(View container, int position, Object object) {
			((ViewPager) container).removeView(mListViews.get(position));
		}

		@Override
		public Object instantiateItem(View container, int position) {
			((ViewPager) container).addView(mListViews.get(position), 0);
			return mListViews.get(position);
		}
	}
	
	private class MyOnPageChangeListener implements ViewPager.OnPageChangeListener {
		@Override
        public void onPageScrolled(int position, float positionOffset,int positionOffsetPixels) {
			
		}

        @Override
        public void onPageSelected(int position) {
        	mActionBar.setSelectedNavigationItem(position);
        }

        @Override
        public void onPageScrollStateChanged(int state) {

        }
        
	}
	
	private class MyTabListener implements ActionBar.TabListener {

		@Override
		public void onTabReselected(Tab tab, FragmentTransaction ft) {

		}

		@Override
		public void onTabSelected(Tab tab, FragmentTransaction ft) {

			for (int i = 0; i < mTabPagerList.size(); i++) {
				if (i == tab.getPosition()) {
					mViewPager.setCurrentItem(i);
				}
			}

		}

		@Override
		public void onTabUnselected(Tab tab, FragmentTransaction ft) {

		}

	}

    //设置搜索条
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.search, menu);
		MenuItem searchItem = menu.findItem(R.id.action_searchview);


		//打开直接显示搜索条
		searchItem.expandActionView();
		SearchView searchView = (SearchView) searchItem.getActionView();	
		searchView.setOnQueryTextListener(new OnQueryTextListener() {
			
			@Override
			public boolean onQueryTextSubmit(String query) {
				// TODO Auto-generated method stub
				return false;
			}
			
			@Override
			public boolean onQueryTextChange(String newText) {		
			    TextView tv1 = (TextView) mViewPager.findViewWithTag("tvRecord1");   
			    TextView tv2 = (TextView) mViewPager.findViewWithTag("tvRecord2");   
			    TextView tv3 = (TextView) mViewPager.findViewWithTag("tvRecord3"); 
			    if(tv1!=null){
                tv1.setText(newText);
                }
			    if(tv2!=null){
	            tv2.setText(newText);
			    }
			    if(tv3!=null){
	            tv3.setText(newText);
			    }

				return false;
			}
		});
		
		searchItem.setOnActionExpandListener(new OnActionExpandListener() {
			
			@Override
			public boolean onMenuItemActionExpand(MenuItem item) {
				Toast.makeText(SearchActivity.this, "expand", Toast.LENGTH_LONG).show();
				return true;
			}
			
			@Override
			public boolean onMenuItemActionCollapse(MenuItem item) {
                Toast.makeText(SearchActivity.this,"collapse",Toast.LENGTH_SHORT).show();				
                return true;
			}
		});
			
		
		return super.onCreateOptionsMenu(menu);
	}
}
